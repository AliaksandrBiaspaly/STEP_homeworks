1. Инициализация репозитория
Создать пустой репозиторий Git или вновь инициализировать существующий можно параметром init.
При инициализации он создаст скрытую папку. В ней содержатся все объекты и ссылки, которые Git использует и создаёт
в истории работы над проектом.

git init

2. Добавление отдельных файлов или всех файлов в область подготовленных файлов

git add namefile.txt
git add .    # добавить все файлы и папки в эту область

3. Проверка статуса репозитория

git status

4. Внесение изменений однострочным сообщением или через редактор

в репозитории можно добавить однострочное сообщение с помощью параметра commit с флагом -m.
Само сообщение вводится непосредственно после флага, в кавычках.

git commit -m "Your short summary about the commit"

можно открыть текстовый редактор в терминале для написания полного сообщения коммита.
 Оно может состоять из нескольких строк текста, в котором подробно характеризуются изменения, внесённые в репозиторий.

git commit

5. Создание новой ветки и переход в неё

git branch new_branch_name

Но Git не переключится на неё автоматически. Для автоматического перехода нужно добавить флаг -b и параметр checkout.

git checkout -b new_branch_name

6. Просмотр списка веток

Команда отобразит все ветки, отметит текущую звёздочкой (*) и выделит её цветом.

git branch

7. Слияние двух веток

Объединить две ветки можно параметром merge с указанием имени ветки. Команда объединит указанную ветку с основной.

git merge existing_branch_name

Если надо выполнить коммит слияния, выполните команду git merge с флагом --no-ff.

git merge --no-ff existing_branch_name

Указанная команда объединит заданную ветку с основной и произведёт коммит слияния. Это необходимо для фиксации всех слияний в вашем репозитории.

8. Добавление удалённого репозитория

Добавить удалённый репозиторий можно параметром remote add, указав shortname и url требуемого репозитория.

git remote add awesomeapp https://github.com/someurl..

9. Отправка изменений в удалённый репозиторий

Отправлять изменения в удалённый репозиторий можно параметром push с указанием имени репозитория и ветки.

git push origin main

Эта команда передаёт локальные изменения в центральный репозиторий, где с ними могут ознакомиться другие участники проекта.

10. Получение изменений из удалённого репозитория

Для загрузки изменений из удалённого репозитория используется параметр pull. Он скачивает копию текущей ветки с указанного удалённого репозитория и объединяет её с локальной копией.

git pull
